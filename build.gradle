buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }
}

plugins {
    id "java-library"
    id "net.researchgate.release" version "2.6.0"
    id "com.github.hierynomus.license" version "0.14.0"
}

apply plugin: "java"
apply plugin: "jacoco"
apply plugin: "maven-publish"
apply plugin: 'signing'
apply plugin: "com.github.hierynomus.license"

group "io.zhudy.duic"

sourceCompatibility = 1.7
targetCompatibility = 1.7
[compileJava, compileTestJava, javadoc]*.options*.encoding = "UTF-8"

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    compileOnly "javax.servlet:javax.servlet-api:4.0.0"
    compileOnly "com.google.code.gson:gson:2.8.2"
    compileOnly "com.fasterxml.jackson.core:jackson-databind:2.9.3"
    compileOnly "org.springframework:spring-context:4.3.13.RELEASE"

    api("org.slf4j:slf4j-api:1.7.25")
    api("com.squareup.okhttp3:okhttp:3.9.1")

    testImplementation("org.mockito:mockito-core:2.13.0")
    testImplementation("com.fasterxml.jackson.core:jackson-databind:2.9.3")
    // testCompile "com.google.code.gson:gson:2.8.2"
    testImplementation("com.squareup.okhttp3:mockwebserver:3.9.1")
    testImplementation("org.springframework:spring-context:4.3.13.RELEASE")
    testImplementation("org.springframework:spring-test:4.3.13.RELEASE")
}

license {
    headerURI = com.hierynomus.gradle.license.LicenseBasePlugin.class.getClassLoader().getResource("headers/Apache-2.0").toURI()
    ext {
        year = "2017-${Calendar.getInstance().get(Calendar.YEAR)}"
        author = "the original author or authors"
    }
}
tasks.withType(com.hierynomus.gradle.license.tasks.LicenseCheck) {
    it.enabled = false
}

jacoco {
    toolVersion = '0.7.9'
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
        html.destination file("${buildDir}/jacocoHtml")
    }
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

if (project.hasProperty("signing.keyId")) {
    signing {
        sign configurations.archives
    }

    uploadArchives {
        repositories {
            mavenDeployer {
                beforeDeployment { deployment -> signing.signPom(deployment) }

                repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                    authentication(userName: System.env.OSSRH_USERNAME, password: System.env.OSSRH_PASSWORD)
                }

                snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                    authentication(userName: System.env.OSSRH_USERNAME, password: System.env.OSSRH_PASSWORD)
                }

                pom.project {
                    name "duic-java-client"
                    artifactId "duic-java-client"
                    packaging "jar"
                    description "DuiC 统一配置管理 Java Client 工具包"
                    url "https://github.com/zhudyos/duic-java-client"

                    scm {
                        url "https://github.com/zhudyos/duic-java-client.git"
                        connection "scm:git:git://github.com/zhudyos/duic-java-client.git"
                        developerConnection "scm:git:git@github.com:zhudyos/duic-java-client.git"
                    }

                    licenses {
                        license {
                            name "The Apache License, Version 2.0"
                            url "http://www.apache.org/licenses/LICENSE-2.0.txt"
                        }
                    }

                    developers {
                        developer {
                            id "kevin70"
                            name "Kevin Zou"
                            email "kevinz@weghst.com"
                        }
                    }
                }
            }
        }
    }
}
